# GitHub Action workflows to build and test the plug-in on MacOS
#
# Adapted from Wireshark's repository https://github.com/wireshark/wireshark/tree/master/.github/workflows

name: Build and test MacOS plug-in

on: [push, pull_request]

env:
   WIRESHARK_BRANCH: master-3.2
   WIRESHARK_QT_VERSION: 5.12.3

jobs:
   standalone:
      name: Build and test standalone plugin
      runs-on: macos-latest
      continue-on-error: true
      steps:
         - name: Checkout plug-in
           uses: actions/checkout@v2
         - name: Update brew packages
           run: brew update
         - name: Install dependencies for a standalone build
           run: |
              brew install wireshark -v

         - name: Build standalone
           run: |
              mkdir build
              cd build
              cmake ..
              make
              make install

         - name: Set up Python
           uses: actions/setup-python@v1
           with:
              python-version: 2.7
         - name: Install dependencies for testing
           run: |
              brew install libdnet libpcap
         - name: Install Python packages for testing
           run: |
              python -m pip install --upgrade pip setuptools
              pip install pysap pyshark-legacy
         - name: Run tests
           run: |
              python tests/__init__.py        

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/sap.so exe/sap-standalone.so
         - name: Upload Ubuntu packages
           uses: actions/upload-artifact@v1
           with:
              name: packages
              path: exe

   intree:
      name: Build and test in-tree plugin
      runs-on: macos-latest
      steps:
         - name: Checkout Wireshark
           uses: actions/checkout@v2
           with:
              repository: wireshark/wireshark
              ref: ${{ env.WIRESHARK_BRANCH }}
         - name: Checkout plug-in
           uses: actions/checkout@v2
           with:
              path: plugins/epan/sap
         - name: Apply patch
           run: |
              git apply plugins/epan/sap/wireshark-${{ env.WIRESHARK_BRANCH }}.patch

         - name: Set up Python 3.8
           uses: actions/setup-python@v1
           with:
              python-version: 3.8
         - name: Set up Ruby 2.6
           uses: actions/setup-ruby@v1
           with:
              ruby-version: '2.6'
         - name: Update brew packages
           run: brew update
         - name: Install dependencies for a in-tree build
           run: |
              brew install c-ares glib libgcrypt gnutls lua@5.1 cmake nghttp2 snappy lz4 libxml2 ninja libmaxminddb doxygen libsmi spandsp brotli minizip zstd || true
         - name: Install Qt
           uses: jurplel/install-qt-action@v2
           with:
              version: ${{ env.WIRESHARK_QT_VERSION }}
         - name: Install asciidoctor
           run: gem install asciidoctor

         - name: Build in-tree
           run: |
              mkdir build
              cd build
              cmake ..
              make sap tshark

         - name: Set up Python
           uses: actions/setup-python@v1
           with:
              python-version: 2.7
         - name: Install dependencies for testing
           run: |
              brew install libdnet libpcap
         - name: Install Python packages for testing
           run: |
              python -m pip install --upgrade pip setuptools
              pip install pysap pyshark-legacy
         - name: Run tests
           run: |
              cd build/run/
              python ../../plugins/epan/sap/tests/__init__.py           

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/run/Wireshark.app/Contents/PlugIns/wireshark/3-2/epan/sap.so exe/sap-source.so
         - name: Upload Ubuntu packages
           uses: actions/upload-artifact@v1
           with:
              name: packages
              path: exe
