# GitHub Action workflows to build and test the plug-in on Ubuntu
#
# Adapted from Wireshark's repository https://github.com/wireshark/wireshark/tree/master/.github/workflows

name: Build Ubuntu plug-in

on: [push]

env:
   WIRESHARK_BRANCH: master-3.2

jobs:
   standalone:
      name: Build standalone plugin
      runs-on: ubuntu-latest
      steps:
         - name: Checkout plug-in
           uses: actions/checkout@v2
         - name: Provision for standalone build
           run: sudo tools/ubuntu-provision-standalone.sh
         - name: Build standalone
           run: |
              mkdir build
              cd build
              cmake ..
              make

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/sap.so exe/sap-standalone.so
         - name: Upload Ubuntu packages
           uses: actions/upload-artifact@v1
           with:
              name: packages
              path: exe

   intree:
      name: Build in-tree plugin
      runs-on: ubuntu-latest
      steps:
         - name: Checkout Wireshark
           uses: actions/checkout@v2
           with:
              repository: wireshark/wireshark
              ref: ${{ env.WIRESHARK_BRANCH }}
         - name: Checkout plug-in
           uses: actions/checkout@v2
           with:
              path: plugins/epan/sap
         - name: Apply patch
           run: |
              git apply plugins/epan/sap/wireshark-${{ env.WIRESHARK_BRANCH }}.patch
         - name: Provision for a in-tree build
           run: |
              sudo gem install asciidoctor
              sudo apt-get install -yqq cmake libglib2.0-dev qttools5-dev qttools5-dev-tools libqt5svg5-dev qtmultimedia5-dev qt5-default libpcap-dev bison flex make python3 python3-pip perl libgcrypt-dev
         - name: Build in-tree
           run: |
              mkdir build
              cd build
              cmake ..
              make

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/run/plugins/3.2/epan/sap.so exe/sap-source.so
         - name: Upload Ubuntu packages
           uses: actions/upload-artifact@v1
           with:
              name: packages
              path: exe
              