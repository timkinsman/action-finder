name: windows

on:
  push:
  pull_request:
  schedule:
    - cron: '0 7 * * SUN'

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: VS2017WChar
            vmimage: windows-2016
            mpctype: vs2017
            BuildPlatform: x64
            BuildConfiguration: Debug
            vcpkgarch: x64-windows
            vcpkglibdir: debug\lib
            vcpkgpackages: 'openssl xerces-c[xmlch-wchar]'
            OptionalFeatures: uses_wchar=1
          - name: VS2017Debug64
            vmimage: windows-2016
            mpctype: vs2017
            BuildPlatform: x64
            BuildConfiguration: Debug
            vcpkgarch: x64-windows
            vcpkglibdir: debug\lib
            vcpkgpackages: openssl xerces-c
          - name: VS2017Release64
            vmimage: windows-2016
            mpctype: vs2017
            BuildPlatform: x64
            BuildConfiguration: Release
            vcpkgarch: x64-windows
            vcpkglibdir: lib
            vcpkgpackages: openssl xerces-c
          - name: VS2019WChar
            vmimage: windows-2019
            mpctype: vs2019
            BuildPlatform: x64
            BuildConfiguration: Debug
            vcpkgarch: x64-windows
            vcpkglibdir: debug\lib
            vcpkgpackages: 'openssl xerces-c[xmlch-wchar]'
            OptionalFeatures: uses_wchar=1
          - name: VS2019Debug64
            vmimage: windows-2019
            mpctype: vs2019
            BuildPlatform: x64
            BuildConfiguration: Debug
            vcpkgarch: x64-windows
            vcpkglibdir: debug\lib
            vcpkgpackages: openssl xerces-c
          - name: VS2019Release64
            vmimage: windows-2019
            mpctype: vs2019
            BuildPlatform: x64
            BuildConfiguration: Release
            vcpkgarch: x64-windows
            vcpkglibdir: lib
            vcpkgpackages: openssl xerces-c
          - name: VS2019Debug32
            vmimage: windows-2019
            mpctype: vs2019
            BuildPlatform: Win32
            BuildConfiguration: Debug
            vcpkgarch: x86-windows
            vcpkglibdir: debug\lib
            vcpkgpackages: openssl xerces-c
          - name: VS2019Release32
            vmimage: windows-2019
            mpctype: vs2019
            BuildPlatform: Win32
            BuildConfiguration: Release
            vcpkgarch: x86-windows
            vcpkglibdir: lib
            vcpkgpackages: openssl xerces-c
    runs-on: ${{ matrix.vmimage }}
    name: ${{ matrix.name }}
    env:
      ACE_ROOT: ${{ github.workspace }}/ACE
      TAO_ROOT: ${{ github.workspace }}/TAO
      MPC_ROOT: ${{ github.workspace }}/MPC
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      XERCESC_INCDIR: ${{ github.workspace }}/installed/${{ matrix.vcpkgarch }}/include
      XERCESC_LIBDIR: ${{ github.workspace }}/installed/${{ matrix.vcpkgarch }}/${{ matrix.vcpkglibdir }}
      SSL_INCDIR: ${{ github.workspace }}/installed/${{ matrix.vcpkgarch }}/include
      SSL_LIBDIR: ${{ github.workspace }}/installed/${{ matrix.vcpkgarch }}/${{ matrix.vcpkglibdir }}
    steps:
    - name: checkout ACE/TAO
      uses: actions/checkout@v2
    - name: checkout MPC
      uses: actions/checkout@v2
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: Install vcpkg
      uses: lukka/run-vcpkg@v3
      with:
        setupOnly: true
    - name: Install vcpkg packages
      run: |
        ${env:VCPKG_ROOT}\vcpkg install --recurse --triplet ${matrix.vcpkgarch} ${matrix.vcpkgpackages}
      shell: pwsh
    - name: create $ACE_ROOT/ace/config.h
      run: |
        '#include "ace/config-win32.h"' > ${env:ACE_ROOT}/ace/config.h
      shell: pwsh
    - name: create $ACE_ROOT/bin/MakeProjectCreator/config/default.features
      run: |
        echo "ipv6=1" | out-file -encoding ASCII ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        echo "xerces3=1" | out-file -encoding ASCII ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        echo "ssl=1" | out-file -append -encoding ASCII ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        echo "versioned_namespace=1" | out-file -append -encoding ASCII ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
      shell: pwsh

  - powershell: |
      echo $(OptionalFeatures) | out-file -append -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
    displayName: Add optional features ($(OptionalFeatures))
    condition: and(succeeded(), ne(variables['OptionalFeatures'], ''))

    - name: Run mwc.pl on $(TAO_ROOT)/TAO_ACE.mwc
      run: |
        perl ${env:ACE_ROOT}/bin/mwc.pl -type {{ matrix.mpctype }} ${env:TAO_ROOT}/TAO_ACE.mwc -workers 4
      shell: pwsh
    - name: Run mwc.pl on $(ACE_ROOT)/tests/tests.mwc
      run: |
        perl ${env:ACE_ROOT}/bin/mwc.pl -type {{ matrix.mpctype }} ${env:ACE_ROOT}/tests/tests.mwc -workers 4
      shell: pwsh
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.1
    - name: Build solution TAO/TAO_ACE.sln
    inputs:
      solution: TAO/TAO_ACE.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true
    - name: Build solution ACE/tests/tests.sln
    inputs:
      solution: ACE/tests/tests.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true
