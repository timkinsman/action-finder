name: Bump_and_Package

on:
  push:
    branches:
      - master

jobs:
  bump-version:

    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, '[SKIP]')"

    steps:

    - uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Setup Git
      run: |
        git config user.name "JoaoRodrigues"
        git config user.email 'joaorodrigues@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git checkout "${GITHUB_REF:11}"

    - name: Create skip flag
      run: |
        echo "::set-env name=SKIPBUMP::FALSE"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bump2version

    - name: Bump Minor Version
      run: |
        bump2version minor
        echo "::set-env name=SKIPBUMP::TRUE"
      if: "startsWith(github.event.head_commit.message, 'FEATURE')"

    # Default action
    - name: Bump Patch Version
      run: |
        bump2version patch
      if: env.SKIPBUMP == 'FALSE'

    # No major version change should go through automatically.

    - name: Commit version change to master
      run: |
        git push --follow-tags


  release-and-publish:

    runs-on: ubuntu-latest
    needs: bump-version  # only if the previous finished successfully
    if: "contains(github.event.head_commit.message, 'version bump')"  # only if the last commit is an auto version bump

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --repository testpypi dist/*