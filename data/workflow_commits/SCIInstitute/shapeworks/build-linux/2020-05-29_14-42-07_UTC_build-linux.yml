name: Linux Build

on:
  push:
    branches:
      - master
      - auto_deploy
    tags:
    - '*'
  pull_request:

env:
  CCACHE_VERSION: 3.7.7

jobs:
  build:

    runs-on: ubuntu-18.04
    
    steps:

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          ${{ runner.os }}-ccache-
    
    - name: Setup Conda
      uses: goanpeca/setup-miniconda@v1
      with:
          miniconda-version: 'latest'

    - name: Conda info
      run: conda info

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Get tags
      run: git fetch --unshallow origin +refs/tags/*:refs/tags/*

    - name: conda installs
      shell: bash -l {0}
      run: source ./conda_installs.sh

    - name: install ccache
      shell: bash -l {0}
      run: conda activate shapeworks && conda install -c conda-forge ccache=3.7.7
      
    - name: Acquire LinuxDeployQt
      run: curl -L -o $HOME/linuxdeployqt https://github.com/probonopd/linuxdeployqt/releases/download/5/linuxdeployqt-5-x86_64.AppImage && chmod +x $HOME/linuxdeployqt

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache-linux

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: "5.9.9"
        mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v1
      with:
        path: ~/install
        key: ${{ runner.os }}-${{ hashFiles('**/build_dependencies.sh') }}

    - name: Build dependencies
      shell: bash -l {0}
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: conda activate shapeworks && INSTALL_DIR=$HOME/install BUILD_DIR=$HOME/build ./build_dependencies.sh

    - name: cmake
      shell: bash -l {0}
      run: conda activate shapeworks && mkdir build && cd build && cmake -DVXL_DIR=$HOME/install/share/vxl/cmake -DITK_DIR=$HOME/install/lib/cmake/ITK-5.0 -DVTK_DIR=$HOME/install/lib/cmake/vtk-8.2 -DEigen3_DIR=$HOME/install/share/eigen3/cmake -DXLNT_DIR=$HOME/install -DOpenVDB_DIR=$HOME/install/lib/cmake/OpenVDB -DCMAKE_BUILD_TYPE=Release -DBuild_Studio=ON -DBuild_View2=ON -DCMAKE_PREFIX_PATH=${CONDA_PREFIX} -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/shapeworks-install ..

    - name: make
      shell: bash -l {0}
      run: conda activate shapeworks && cd build && make -j4

    - name: make install
      shell: bash -l {0}
      run: conda activate shapeworks && cd build && make install
      
    - name: Remove Qt SQL Stuff
      run: mv /home/runner/work/ShapeWorks/Qt/5.9.9/gcc_64/plugins/sqldrivers/libqsqlmysql.so /home/runner/work/ShapeWorks/Qt/5.9.9/gcc_64/plugins/sqldrivers/libqsqlpsql.so /tmp

    - name: Build Binary Package
      run: pwd ; ls ; PATH=$HOME:$PATH ./Support/package.sh tag ${GITHUB_WORKSPACE}/shapeworks-install $HOME/install ; ls /home/runner/work/ShapeWorks/ShapeWorks/package

    - name: make test
      shell: bash -l {0}
      run: conda activate shapeworks && cd build && ctest -VV
  
    - name: Replace Qt SQL Stuff
      run: mv /tmp/lib*.so /home/runner/work/ShapeWorks/Qt/5.9.9/gcc_64/plugins/sqldrivers/

    - name: ccache statistics
      shell: bash -l {0}
      run: conda activate shapeworks && ccache -s

    - uses: actions/upload-artifact@v1
      with:
        name: artifact-${{github.sha}}-linux
        path: ${{runner.workspace}}/ShapeWorks/artifacts

    - name: Deploy
      id: deploy
      if: github.ref == 'refs/heads/auto_deploy'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-linux"
        prerelease: true
        title: "Development Build"
        files: |
             ${{runner.workspace}}/ShapeWorks/artifacts/*.zip
