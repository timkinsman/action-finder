name: Feature Test

on:
  push:
    branches:
    - feature/**

env:
  COVERALLS_PARALLEL: true
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install black
      run: |
        python -m pip install -U pip
        pip install $(grep black requirements_dev.txt | cut -d';' -f 1)
    - run: black --check --diff .

  unit-tests:
    name: "python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "${{ matrix.python-version }}"
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - run: |
        coverage run $(which pytest)
        coveralls

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - name: pytest
      run: pytest

  report-coverage:
    name: Report coverage
    needs: unit-tests
    runs-on: ubuntu-latest
    run: curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$GITHUB_SHA&payload[status]=done"
