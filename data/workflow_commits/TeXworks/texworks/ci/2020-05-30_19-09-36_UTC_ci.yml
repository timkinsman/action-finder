name: CI
on:
  - push
  - pull_request

jobs:
  build-linux-legacy:
    name: Linux (legacy)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - qt: 5.3
          poppler: 0.24.5
          hunspell: 1.2.8
          poppler-data: 0.4.6
          cmake: 3.1.0
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt update -y
        sudo apt install -y zlib1g-dev liblua5.3-dev xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0

    - name: Install CMake ${{ matrix.cmake }}
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v${{ matrix.cmake }}/cmake-${{ matrix.cmake }}-Linux-x86_64.tar.gz
        tar -xf cmake-${{ matrix.cmake }}-Linux-x86_64.tar.gz
        echo "::add-path::$(pwd)/cmake-${{ matrix.cmake }}-Linux-x86_64/bin"

    - name: Install Qt ${{ matrix.qt }}
      uses: jurplel/install-qt-action@v2
      with:
        version: '${{ matrix.qt }}'
        modules: 'qtscript'

    - name: Build Poppler ${{ matrix.poppler }}
      run: |
        wget https://poppler.freedesktop.org/poppler-${{ matrix.poppler }}.tar.xz
        tar -xf poppler-${{ matrix.poppler }}.tar.xz
        cd poppler-${{ matrix.poppler }}
        mkdir build && cd build
        cmake -DENABLE_XPDF_HEADERS=ON -DENABLE_UNSTABLE_API_ABI_HEADERS=ON ENABLE_XPDF_HEADERS=ON -DENABLE_LIBOPENJPEG=unmaintained -DBUILD_GTK_TESTS=OFF -DBUILD_QT4_TESTS=OFF -DBUILD_QT5_TESTS=OFF -DBUILD_CPP_TESTS=OFF -DENABLE_UTILS=OFF -DENABLE_CPP=OFF -DENABLE_GLIB=OFF ..
        make -j
        sudo make install
        cd ${GITHUB_WORKSPACE}
        # poppler-data
        wget https://poppler.freedesktop.org/poppler-data-${{ matrix.poppler-data }}.tar.gz
        tar -xf poppler-data-${{ matrix.poppler-data }}.tar.gz
        cd poppler-data-${{ matrix.poppler-data }}
        sudo make install

    - name: Build Hunspell ${{ matrix.hunspell }}
      run: |
        # Hunspell <= 1.3.3 are on SourceForge, later versions are on GitHub
        wget https://downloads.sourceforge.net/project/hunspell/Hunspell/${{ matrix.hunspell }}/hunspell-${{ matrix.hunspell }}.tar.gz
        tar -xf hunspell-${{ matrix.hunspell }}.tar.gz
        cd hunspell-${{ matrix.hunspell }}
        autoreconf -vfi
        ./configure --disable-dependency-tracking
        make -j
        sudo make install

    - name: Configure
      # `cmake -B build` supported was only introduced in CMake 3.13
      run: mkdir build && cd build && cmake -DTW_BUILD_ID='github' ${GITHUB_WORKSPACE}

    - name: Build
      run: make -j
      working-directory: build

    - name: Test
      run: LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}" QT_QPA_PLATFORM_PLUGIN_PATH="${Qt5_DIR}/plugins/platforms" xvfb-run ctest -V
      working-directory: build

################################################################################

  build-win-msys:
    name: Windows (MSYS)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Configure Git
      run: git config --global core.autocrlf input
      shell: bash

    - name: Setup MSYS
      uses: eine/setup-msys2@v1
      with:
        update: true
        install: mingw-w64-x86_64-cmake git make mingw-w64-x86_64-gcc mingw-w64-x86_64-hunspell mingw-w64-x86_64-lua mingw-w64-x86_64-poppler mingw-w64-x86_64-qt5

    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure
      run: cmake -G 'MSYS Makefiles' -B build -DTW_BUILD_ID='github' -DTEXWORKS_ADDITIONAL_LIBS='shlwapi'

    - name: Build
      run: make -j
      working-directory: build

    - name: Test
      run: ctest -V
      working-directory: build

################################################################################

  build-macosx-homebrew:
    name: Mac OS X (Homebrew)
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        brew update > brew_update.log || { print_error "Updating homebrew failed"; cat brew_update.log; exit 1; }
        brew install hunspell poppler lua qt5

    - name: Configure
      run: cmake -B build -DTW_BUILD_ID='github' ${GITHUB_WORKSPACE} -DCMAKE_PREFIX_PATH="/usr/local/opt/qt5"

    - name: Build
      run: make -j
      working-directory: build

    - name: Test
      run: QT_QPA_PLATFORM_PLUGIN_PATH="${Qt5_DIR}/plugins/platforms" ctest -V
      working-directory: build


################################################################################

  build-macosx-macports:
    name: Mac OS X (MacPorts)
    runs-on: macos-latest
    strategy:
      matrix:
        include:
        - macports-version: 2.6.2
          macports-platform: 10.15-Catalina

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install MacPorts
      run: |
        wget https://github.com/macports/macports-base/releases/download/v${{ matrix.macports-version }}/MacPorts-${{ matrix.macports-version }}-${{ matrix.macports-platform }}.pkg
        sudo /usr/sbin/installer -pkg MacPorts-${{ matrix.macports-version }}-${{ matrix.macports-platform }}.pkg -target /
        echo "::add-path::/opt/local/bin:/opt/local/sbin"

    - name: Install Dependencies
      run: sudo port selfupdate && sudo port install hunspell lua poppler-qt5 qt5-qtbase qt5-qtscript qt5-qttools

    - name: Configure
      run: cmake -B build -DTW_BUILD_ID='github' ${GITHUB_WORKSPACE}

    - name: Build
      run: make -j
      working-directory: build

    - name: Test
      run: ctest -V
      working-directory: build

