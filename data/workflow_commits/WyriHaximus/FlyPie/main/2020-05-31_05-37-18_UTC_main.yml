
name: Main
on: [push, pull_request]
jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.2', '7.3', '7.4']
        dependencies: ['lowest', 'highest']
    name: PHP ${{ matrix.php-versions }} Test on ubuntu-latest with ${{ matrix.dependencies }} dependencies
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, intl
        coverage: xdebug
        tools: cs2pr

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Use lowest dependencies
      if: ${{ matrix.dependencies == 'lowest' }}
      run: composer update --prefer-lowest --no-progress --no-suggest -n

    - name: Use lowest dependencies
      if: ${{ matrix.dependencies == 'highest' }}
      run: composer update --no-progress --no-suggest -n

    - name: PHP CodeSniffer
      run: composer phpcs

    - name: PHPUnit
      run: composer phpunit

    - name: PHPStan
      run: composer stan -- --error-format=checkstyle | cs2pr