name: CI Build
on: [push, pull_request]
jobs:
  build:
    name: Java ${{ matrix.java }}/${{ matrix.os }} baseline build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest] # All supported OS
        java: [8] # Minimum supported major version
    steps:
    - name: Check out repository
      uses: actions/checkout@v1
    - name: Set up Java 8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        architecture: x64
    - name: Output Java version
      run: java -version
    - name: Output Gradle version
      run: ./gradlew --version
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
    - name: Build with Gradle
      run: ./gradlew build --info
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
  recent-compatibility-tests:
    name: Java ${{ matrix.java }}/${{ matrix.os }} recent version compatibility
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Exclude mac as it's unreliable at the moment
        # See https://github.com/actions/virtual-environments/issues/736
        os: [ubuntu-latest, windows-latest]
        java: [8, 11, 13, 14] # All supported major versions
      fail-fast: true
    steps:
    - name: Check out repository
      uses: actions/checkout@v1
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        architecture: x64
    - name: Output Java version
      run: java -version
    - name: Output Gradle version
      run: ./gradlew --version
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
    - name: Run recent version compatibility tests
      run: ./gradlew testRecentVersionCompatibility --info
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
  full-compatibility-tests:
    name: Java ${{ matrix.java }}/${{ matrix.os }} full compatibility
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # Only a single OS to cut down on execution time
        java: [8, 11] # LTS versions only; 17 will be the next one
      fail-fast: true
    steps:
    - name: Check out repository
      uses: actions/checkout@v1
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        architecture: x64
    - name: Output Java version
      run: java -version
    - name: Output Gradle version
      run: ./gradlew --version
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
    - name: Run full version compatibility tests
      run: ./gradlew testVersionCompatibility --info
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
  unsupported-java-versions:
    name: Java ${{ matrix.java }}/${{ matrix.os }} compatibility
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Exclude mac as it's unreliable at the moment
        # See https://github.com/actions/virtual-environments/issues/736
        os: [ubuntu-latest, windows-latest]
        java: [15-ea] # EA builds of all current pre-release major versions
      fail-fast: false
    steps:
    - name: Check out repository
      uses: actions/checkout@v1
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        architecture: x64
    - name: Output Java version
      run: java -version
    - name: Output Gradle version
      run: ./gradlew --version
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
    - name: Build with Gradle
      continue-on-error: true
      # Most Java version compatibility failures will manifest directly in the
      # test suite with any Avro version
      run: ./gradlew build --info
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
