name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install the correct version of node
      - name: Detect Node version
        run: echo "##[set-output name=version;]$(cat .nvmrc)"
        id: nvmrc
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvmrc.outputs.version }}"

      # Restore yarn cache from between builds
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore dependencies from cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Install dependencies
      - name: Install dependencies
        run: yarn

      # Make sure build succeeds
      - name: Build
        run: yarn build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install the correct version of node
      - name: Detect Node version
        run: echo "##[set-output name=version;]$(cat .nvmrc)"
        id: nvmrc
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvmrc.outputs.version }}"

      # Restore yarn cache from between builds
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore dependencies from cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Install dependencies
      - name: Install dependencies
        run: yarn

      # Lint
      - name: Lint files
        continue-on-error: true
        run: |
          yarn lint:js
          yarn lint:hbs

      # Run tests
      - name: Run tests
        run: yarn coverage

      # Upload coverage info on push
      - name: Upload coverage info
        if: github.event_name == 'push'
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
