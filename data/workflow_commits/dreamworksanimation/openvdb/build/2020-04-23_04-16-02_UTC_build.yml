
name: Build

on: [push, pull_request]

jobs:
  testabi7:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2020
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ Release 7 ON None -DOPENVDB_CXX_STRICT=ON
    - name: test
      run: ./ci/test.sh

  testabi6:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2019
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ Release 6 ON None -DOPENVDB_CXX_STRICT=ON
    - name: test
      run: ./ci/test.sh

  testabi5:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2018
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ Release 5 ON None -DOPENVDB_CXX_STRICT=ON
    - name: test
      run: ./ci/test.sh

  testabi4:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2018
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ Release 4 ON None -DOPENVDB_CXX_STRICT=ON
    - name: test
      run: ./ci/test.sh

  testhou180:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-base:2019
    steps:
    - uses: actions/checkout@v1
    - name: houdini
      run: ./ci/install_houdini.sh 18.0 ${{ secrets.HOUPASS }}
    - name: build
      run: ./ci/build_houdini.sh clang++ Release ON
    - name: test
      run: ./ci/test.sh

  testhou175:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-base:2018
    steps:
    - uses: actions/checkout@v1
    - name: houdini
      run: ./ci/install_houdini.sh 17.5 ${{ secrets.HOUPASS }}
    - name: build
      run: ./ci/build_houdini.sh clang++ Release ON
    - name: test
      run: ./ci/test.sh

  testhou170:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-base:2018
    steps:
    - uses: actions/checkout@v1
    - name: houdini
      run: ./ci/install_houdini.sh 17.0 ${{ secrets.HOUPASS }}
    - name: build
      run: ./ci/build_houdini.sh clang++ Release OFF
    - name: test
      run: ./ci/test.sh

  testabi7noblosc:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2020
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ Release 7 OFF None -DOPENVDB_CXX_STRICT=ON
    - name: test
      run: ./ci/test.sh

  testhou180gcc:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-base:2019
    steps:
    - uses: actions/checkout@v1
    - name: houdini
      run: ./ci/install_houdini.sh 18.0 ${{ secrets.HOUPASS }}
    - name: build
      run: ./ci/build_houdini.sh g++ Release OFF
    - name: test
      run: ./ci/test.sh

  # testhou180debug:
  #   runs-on: ubuntu-16.04
  #   container:
  #     image: aswf/ci-base:2019
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: houdini
  #     run: ./ci/install_houdini.sh 18.0 ${{ secrets.HOUPASS }}
  #   - name: build
  #     run: ./ci/build_houdini.sh clang++ Debug OFF

  testabi7gcc:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2020
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh g++ Release 7 ON None -DOPENVDB_CXX_STRICT=ON

  testabi7debug:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2020
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ DebugNoInfo 7 ON None -DOPENVDB_CXX_STRICT=ON

  testabi7sse:
    runs-on: ubuntu-16.04
    container:
      image: aswf/ci-openvdb:2020
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: ./ci/build.sh clang++ Release 7 ON SSE42 -DOPENVDB_CXX_STRICT=ON
    - name: test
      run: ./ci/test.sh

  testwindows2019:
    runs-on: windows-2019
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
    - uses: actions/checkout@v2
    - name: path
      run: |
        # note: system path must be modified in a previous step to it's use
        echo "::add-path::%VCPKG_INSTALLATION_ROOT%\installed\x64-windows\bin"
        echo "::add-path::${{github.workspace}}\build\openvdb\Release"
    - name: update_vcpkg
      shell: bash
      run: |
        # temporarily update vcpkg to fix tbb port
        cd C:\vcpkg
        git fetch
        git checkout 97302ca1729eac9917c8a8977667601453795c90
        bootstrap-vcpkg.bat
    - name: install
      shell: bash
      run: ./ci/install_windows.sh
    - name: build
      shell: bash
      run: ./ci/build_windows.sh "${VCPKG_INSTALLATION_ROOT}"
    - name: test
      shell: bash
      run: ./ci/test.sh

  testmacos1015:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: install
      shell: bash
      run: ./ci/install_macos.sh
    - name: build
      shell: bash
      # brew boost-python installs a "Keg-only" version of python which is
      # not insatlled to PATH. Until this becomes the default, we must
      # manually provide the location of the require python installation
      # See https://formulae.brew.sh/formula/python@3.8
      # Also need to disable compiler warnings for ABI 6 and above due to
      # the version of clang installed
      run: ./ci/build.sh clang++ Release 7 ON SSE42 -DPython_ROOT_DIR=/usr/local/opt/python@3.8 -DOPENVDB_CXX_STRICT=OFF
    - name: test
      shell: bash
      run: ./ci/test.sh
