name: CI

on:
  push:
    branches:
      - v8-7.4.288-build

jobs:
  build_j2v8_linux_x86_64:
    name: V8 7.4.288 build for Linux x64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: check build dependencies
      run: |
        python --version
        git --version
        docker --version
    
    - name: Build J2V8 for Linux x86_64
      run: |
        python build.py -t linux -a x64 --docker v8 j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java j2v8test
    - name: Archive J2V8 jar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-linux-x86_64
        path: build.out/j2v8_linux_x86_64-6.0.0-SNAPSHOT.jar
  
  build_j2v8_android_arm64:
    name: V8 7.4.288 build for Android arm64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1 
    - name: Build J2V8 for Android arm64
      run: |
        python build.py -t android -a arm64 --docker v8
        zip -r v8_include.zip v8.out/include
    - name: Archive V8 monolithic library
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-arm64-monolith
        path: v8.out/android.arm64/libv8_monolith.a
    - name: Archive V8 header files
      uses: actions/upload-artifact@v1.0.0
      with:
        name: v8-header-files
        path: v8_include.zip

  build_j2v8_android_arm:
    name: V8 7.4.288 build for Android arm
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1 
    - name: Build J2V8 for Android arm
      run: |
        python build.py -t android -a arm --docker v8
    - name: Archive V8 monolithic library
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-arm-monolith
        path: v8.out/android.arm/libv8_monolith.a

  build_j2v8_android_x86_64:
    name: V8 7.4.288 build for Android x86_64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1 
    - name: Build J2V8 for Android x86_64
      run: |
        python build.py -t android -a x86_64 --docker v8
    - name: Archive V8 monolithic library
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-x86_64-monolith
        path: v8.out/android.x64/libv8_monolith.a

  build_j2v8_android_x86:
    name: V8 7.4.288 build for Android x86
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1 
    - name: Build J2V8 for Android x86
      run: |
        python build.py -t android -a x86 --docker v8
    - name: Archive V8 monolithic library
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-x86-monolith
        path: v8.out/android.x86/libv8_monolith.a

  generate_j2v8_aar:
    name: Create J2V8 Android archive (aar)
    needs: [build_j2v8_android_arm64, build_j2v8_android_arm, build_j2v8_android_x86_64, build_j2v8_android_x86]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download Android arm64 monolithic library
      uses: actions/download-artifact@v1
      with:
        name: j2v8-android-arm64-monolith

    - name: Download Android arm monolithic library
      uses: actions/download-artifact@v1
      with:
        name: j2v8-android-arm-monolith

    - name: Download Android x86_64 monolithic library
      uses: actions/download-artifact@v1
      with:
        name: j2v8-android-x86_64-monolith

    - name: Download Android x86 monolithic library
      uses: actions/download-artifact@v1
      with:
        name: j2v8-android-x86-monolith

    - name: Download V8 header files
      uses: actions/download-artifact@v1
      with:
        name: v8-header-files

    - name: Copy monolithic libraries to v8.out directory and bundle Android aar file
      run: |
        mkdir -p v8.out/android.arm64
        mkdir -p v8.out/android.arm
        mkdir -p v8.out/android.x64
        mkdir -p v8.out/android.x86
        
        cp -R j2v8-android-arm64-monolith/* v8.out/android.arm64
        cp -R j2v8-android-arm-monolith/* v8.out/android.arm
        cp -R j2v8-android-x86_64-monolith/* v8.out/android.x64
        cp -R j2v8-android-x86-monolith/* v8.out/android.x86

        ls -la v8.out/
        ls -la v8.out/android.arm64
        ls -la v8.out/android.arm
        ls -la v8.out/android.x64
        ls -la v8.out/android.x86

        unzip v8-header-files/v8_include.zip -d .

        # start bundling
        python build.py -t android -a x86 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python build.py -t android -a arm --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python build.py -t android -a x86_64 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
        python build.py -t android -a arm64 --docker --keep-native-libs j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java
    
    - name: Archive J2V8 Android aar file
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-aar
        path: build/outputs/aar/j2v8-release.aar