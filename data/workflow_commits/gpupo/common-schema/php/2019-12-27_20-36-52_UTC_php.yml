name: CI
on:
  pull_request:
    branches:
      - master
      - develop
      - verbose
    paths-ignore:
      - '**.md'
      - 'examples/**'
  push:
    branches:
      - master
      - develop
      - verbose
    paths-ignore:
      - '**.md'
      - 'examples/**'
jobs:
  run:
    name: Run
    runs-on: ${{ matrix.operating-system }}
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: app_db_user
          MYSQL_PASSWORD: app8as3
          MYSQL_DATABASE: app
          # MYSQL_ROOT_PASSWORD: mas7er
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - name: Mysql Setup
        run: mysql -u root -e "CREATE DATABASE IF NOT EXISTS app;
          CREATE USER 'app_db_user'@'localhost' IDENTIFIED BY 'app8as3';
          GRANT ALL ON app.* TO 'app_db_user'@'localhost';"

      - name: Install
        run: make install

      - name: Setup
        run: mkdir -p build && rm -vf .env*local && APP_ENV=test bin/common-schema setup:checklist

      - name: Schema
        run: APP_ENV=test vendor/bin/doctrine orm:schema-tool:update --force

      - name: Build
        run: APP_ENV=test bin/common-schema raise:build -vv

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts --ignore-platform-reqs

      - name: Run test suite
        run: composer run-script test
