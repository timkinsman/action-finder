name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  
  build_wheels:
    name: Wheels on ${{ matrix.os }}/py${{ matrix.python-version }}
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: What OS and Python version
        run: |
          uname -a
          python --version
          which python

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      - name: install pep517
        run: |
          python -m pip install --upgrade pip
          python -m pip install pep517

      - name: Build wheels
        run: |
          python -m pep517.build --binary --out-dir dist/ .

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

      #- name: Upload Release Asset
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ needs.create_release.outputs.upload_url }}
      #    asset_path: ./dist/*.whl
      #    asset_name: 
      #    asset_content_type: 

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
           password: ${{ secrets.pypi_password }}

  build_wheels_linux:
    name: Wheels on ubuntu-latest
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2010_x86_64
        with:
          build-requirements: 'cython'

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*-manylinux*.whl

      #- name: Upload Release Asset
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ needs.create_release.outputs.upload_url }}
      #    asset_path: ./dist/*-manylinux*.whl
      #    asset_name: 
      #    asset_content_type: 

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
           password: ${{ secrets.pypi_password }}

