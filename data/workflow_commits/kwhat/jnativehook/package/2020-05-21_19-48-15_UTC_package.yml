name: Nightly Build
on:
  push:
    branches:
      - maven

jobs:
  build_apple:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64

      - name: Compile x86_64
        shell: bash
        env:
          CC: clang
          CFLAGS: '-O2 -march=x86-64 -mtune=generic -fomit-frame-pointer -flto -fno-stack-protector -pipe'
        run: mvn compile

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: nightly-build
          path: ${{github.workspace}}/**/*

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Build
        shell: bash
        run: |
          sudo bash -c 'source /etc/lsb-release && echo "
          deb [arch=amd64,i386] http://us.archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME} main universe
          deb [arch=amd64,i386] http://us.archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-updates main universe
          deb [arch=amd64,i386] http://us.archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-backports main universe

          deb [arch=arm64,armhf] http://ports.ubuntu.com/ubuntu-ports ${DISTRIB_CODENAME} main universe
          deb [arch=arm64,armhf] http://ports.ubuntu.com/ubuntu-ports ${DISTRIB_CODENAME}-updates main universe
          deb [arch=arm64,armhf] http://ports.ubuntu.com/ubuntu-ports ${DISTRIB_CODENAME}-backports main universe
          " > /etc/apt/sources.list'

          sudo rm -Rf /etc/apt/sources.list.d

          sudo dpkg --add-architecture i386
          sudo dpkg --add-architecture armhf

          sudo apt-get update -m

          sudo apt-get install cmake

          #sudo apt-get install \
            #binutils-x86-64-linux-gnu:amd64  \
            #gcc-x86-64-linux-gnu:amd64

          sudo apt-get install \
            libx11-dev:amd64 \
            libxtst-dev:amd64 \
            libxt-dev:amd64 \
            libxinerama-dev:amd64 \
            libx11-xcb-dev:amd64 \
            libxkbcommon-dev:amd64 \
            libxkbcommon-x11-dev:amd64 \
            libxkbfile-dev:amd64


          sudo apt-get install \
            binutils-i686-linux-gnu \
            gcc-i686-linux-gnu

          sudo apt-get install \
            libx11-dev:i386 \
            libxtst-dev:i386 \
            libxt-dev:i386 \
            libxinerama-dev:i386 \
            libx11-xcb-dev:i386 \
            libxkbcommon-dev:i386 \
            libxkbcommon-x11-dev:i386 \
            libxkbfile-dev:i386



          sudo apt-get install \
            binutils-arm-linux-gnueabihf \
            gcc-arm-linux-gnueabihf

          sudo apt-get install \
            libx11-dev:armhf \
            libxtst-dev:armhf \
            libxt-dev:armhf \
            libxinerama-dev:armhf \
            libx11-xcb-dev:armhf \
            libxkbcommon-dev:armhf \
            libxkbcommon-x11-dev:armhf \
            libxkbfile-dev:armhf

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64

      - name: Compile armv7ve
        shell: bash
        env:
          CC: arm-linux-gnueabihf-gcc
          CFLAGS: '-Os -march=armv7ve -mfpu=vfp -mfloat-abi=hard -flto -fomit-frame-pointer -fno-stack-protector -g -pipe'
          LDFLAGS: '-Wl,-O1 -Wl,--as-needed'
        run: mvn compile


      - name: Compile i586
        shell: bash
        env:
          CC: i686-linux-gnu-gcc
          CFLAGS: '-O2 -march=i586 -mtune=generic -fomit-frame-pointer -flto -fno-stack-protector -pipe'
          LDFLAGS: '-Wl,-O1 -Wl,--as-needed'
        run: mvn compile

      - name: Compile x86_64
        shell: bash
        env:
          CC: x86_64-linux-gnu-gcc
          CFLAGS: '-O2 -march=x86-64 -mtune=generic -fomit-frame-pointer -flto -fno-stack-protector -pipe'
          LDFLAGS: '-Wl,-O1 -Wl,--as-needed'
        run: mvn compile

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: nightly-build
          path: ${{github.workspace}}/**/*


  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64

      - name: Setup arm7ve
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm

      - name: Compile arm7ve
        env:
          CFLAGS: '/O1 /Oy /MACHINE:ARM'
        run: mvn compile

      - name: Setup i586
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - name: Compile i586
        env:
          CFLAGS: '/O2 /Oy /MACHINE:X86'
        run: mvn compile

      - name: Setup x86_64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Compile x86_64
        env:
          CFLAGS: '/O2 /Oy /MACHINE:X86'
        run: mvn compile

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: nightly-build
          path: ${{github.workspace}}/**/*

  package:
    needs: [build_apple, build_linux, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: nightly-build
          path: ${{github.workspace}}

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64

      - name: Package
        shell: bash
        run: |
          mvn package
          mvn versions:display-plugin-updates

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: nightly-jars
          path: ${{github.workspace}}/target/*.jar
