on:
  push:
    #branches:
    #  - master
    #tags:   
    #  - 'naev-*.*.*'
    #  - '!naev-*.*.*-beta*'

name: Release

jobs:
  "Windows-MinGW32":
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Setup MINGW32 Environment
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: true
        install: mingw-w64-i686-libtool mingw-w64-i686-toolchain mingw-w64-i686-gcc mingw-w64-i686-SDL2 mingw-w64-i686-SDL2_mixer mingw-w64-i686-SDL2_image mingw-w64-i686-libxml2 mingw-w64-i686-libpng mingw-w64-i686-openal mingw-w64-i686-libvorbis mingw-w64-i686-binutils mingw-w64-i686-fontconfig mingw-w64-i686-freetype mingw-w64-i686-libzip mingw-w64-i686-gettext mingw-w64-i686-luajit mingw-w64-i686-nsis libtool autoconf autoconf-archive automake automake-wrapper git gettext pkgconfig make intltool itstool zip unzip python3-pip
    
    - name: Checkout Naev Repository 
      uses: actions/checkout@v2

    - name: Build Naev on Win32
      run: |
        ./autogen.sh
        ./configure
        make -j$(nproc --all)
      env:
        CFLAGS: "-O3"

    - name: Build Windows Installer
      run: ./extras/windows/packageWindows.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: win32
        path: |
          ${{ github.workspace }}/naev-win32.exe
          ${{ github.workspace }}/naev-win32.zip

  "Windows-MinGW64":
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Setup MINGW64 Environment
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: mingw-w64-x86_64-libtool mingw-w64-x86_64-toolchain mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_mixer mingw-w64-x86_64-SDL2_image mingw-w64-x86_64-libxml2 mingw-w64-x86_64-libpng mingw-w64-x86_64-openal mingw-w64-x86_64-libvorbis mingw-w64-x86_64-binutils mingw-w64-x86_64-fontconfig mingw-w64-x86_64-freetype mingw-w64-x86_64-libzip mingw-w64-x86_64-gettext mingw-w64-x86_64-luajit mingw-w64-x86_64-nsis libtool autoconf autoconf-archive automake automake-wrapper git gettext pkgconfig make intltool itstool zip unzip python3-pip

    - name: Checkout Naev Repository 
      uses: actions/checkout@v2

    - name: Build Naev on Win64
      run: |
        ./autogen.sh
        ./configure
        make -j$(nproc --all)
      env:
        CFLAGS: "-O3"

    - name: Build Windows Installer
      run: |
        ./extras/windows/packageWindows.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: win64
        path: |
          ${{ github.workspace }}/naev-win64.exe
          ${{ github.workspace }}/naev-win64.zip

  "Linux-x86":
    runs-on: ubuntu-20.04

    steps:
    - name: Get current build date
      run: |

    - name: Update APT Cache
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update

    - name: Install Build Dependencies
      run: |
        sudo apt-get install \
          build-essential \
          automake \
          autoconf-archive \
          gcc-multilib \
          libsdl2-dev:i386 \
          libsdl2-mixer-dev:i386 \
          libsdl2-image-dev:i386 \
          libgl1-mesa-dev:i386 \
          libglu1-mesa-dev:i386 \
          libxml2-dev:i386 \
          libfontconfig1-dev:i386 \
          libfreetype6-dev:i386 \
          libpng-dev:i386 \
          libopenal-dev:i386 \
          libvorbis-dev:i386 \
          libzip-dev:i386 \
          libiberty-dev:i386 \
          libluajit-5.1-dev:i386 \
          gettext \
          autopoint \
          intltool \
          itstool

    - name: Checkout Naev Repository 
      uses: actions/checkout@v2

    - name: Build Naev on Linux32
      run: |
        ./autogen.sh
        ./configure --disable-debug --build=x86_64-linux-gnu --host=i686-linux-gnu
        make -j$(nproc --all)
      env:
        CFLAGS: "-O3 -m32"
        LDFLAGS: "-m32"

    - name: Package Linux32 Release
      run: |
        mv src/naev src/naev-linux-x86-32

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-x86-32
        path: ${{ github.workspace }}/src/naev-linux-x86-32

  "Linux-x86_64":
    runs-on: ubuntu-20.04

    steps:
    - name: Get current build date
      run: |

    - name: Update APT Cache
      run: |
        sudo apt-get update

    - name: Install Build Dependencies
      run: |
        sudo apt-get install \
          build-essential \
          automake \
          autoconf-archive \
          binutils-dev \
          libsdl2-dev \
          libsdl2-mixer-dev \
          libsdl2-image-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libpng-dev \
          libopenal-dev \
          libvorbis-dev \
          libzip-dev \
          libiberty-dev \
          libluajit-5.1-dev \
          gettext \
          autopoint \
          intltool \
          itstool

    - name: Checkout Naev Repository 
      uses: actions/checkout@v2

    - name: Build Naev on Linux64
      run: |
        ./autogen.sh
        ./configure --disable-debug --build=x86_64-linux-gnu --host=x86_64-linux-gnu
        make -j$(nproc --all)
      env:
        CFLAGS: "-O3"

    - name: Package Linux64 Release
      run: |
        mv src/naev src/naev-linux-x86-64

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-x86-64
        path: ${{ github.workspace }}/src/naev-linux-x86-64

  "macOS":
    runs-on: macos-latest

    steps:
    - name: Update Homebrew Cache
      run: |
        brew update

    - name: Install Additional Build Dependencies
      run: |
        brew install \
          automake \
          autoconf-archive \
          pkg-config \
          fontconfig \
          luajit \
          intltool \
          itstool \
          sdl2 \
          sdl2_mixer \
          sdl2_image \
          openal-soft
          
    - name: Remove Homebrew Perl
      run: |
        brew uninstall --ignore-dependencies perl
        
    - name: Checkout Naev Repository 
      uses: actions/checkout@v2

    - name: Build Naev on MacOS
      run: |
        # PKGCONFIG configuration for OpenAL
        export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/openal-soft/lib/pkgconfig"
        
        ./autogen.sh
        ./configure
        make -j$(sysctl -n hw.logicalcpu)
      env:
        CFLAGS: "-O3 -mmacosx-version-min=10.7"
    
    - name: Package MacOS Release
      run: |
        ./extras/macos/bundle.sh
        zip -r naev-macos.zip Naev.app/*

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: ${{ github.workspace }}/naev-macos.zip

  "Generate-Source":
      runs-on: ubuntu-latest

      steps:
      - name: Update APT Cache
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            binutils-dev \
            libzip-dev \
            libiberty-dev \
            libluajit-5.1-dev \
            gettext \
            autopoint \
            intltool \
            itstool

      - name: Checkout Naev Repository 
        uses: actions/checkout@v2

      - name: Generate source archive
        run: |
          ./autogen.sh
          ./configure
          make dist-bzip2

      - name: Check if source archive is valid
        run: |
          # This currently doesn't work correctly.
          # make distcheck 

      - name: Prepare source artifact
        run: |
          make VERSION
          VERSION="$(cat VERSION)"
          mv naev-$VERSION.tar.bz2 source.tar.bz2

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: source
          path: ${{ github.workspace }}/source.tar.bz2

  "Generate-NData":
      runs-on: ubuntu-latest

      steps:
      - name: Update APT Cache
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            binutils-dev \
            libzip-dev \
            libiberty-dev \
            libluajit-5.1-dev \
            gettext \
            autopoint \
            intltool \
            itstool

      - name: Checkout Naev Repository 
        uses: actions/checkout@v2

      - name: Generate ndata
        run: |
          ./autogen.sh
          ./configure
          make pot
          make "ndata.zip"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ndata
          path: ${{ github.workspace }}/ndata.zip

  "Upload-Release":
      runs-on: ubuntu-latest
      needs: [Windows-MinGW64, Windows-MinGW32, macOS, Linux-x86_64, Linux-x86, Generate-NData, Generate-Source]

      steps:
      - name: Update APT Cache
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            binutils-dev \
            libzip-dev \
            libiberty-dev \
            libluajit-5.1-dev \
            gettext \
            autopoint \
            intltool \
            itstool

      - name: Checkout Naev Repository 
        uses: actions/checkout@v2

      - name: Get VERSION
        run: |
          ./autogen.sh
          ./configure
          make VERSION

      - name: Create Release Staging Area
        run: |
          mkdir -p temp   

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/temp/
          
      - name: Collect files for distribution
        run: |
          mkdir -p dist

          VERSION="$(cat VERSION)"
           # Get version, negative minors mean betas
          if [[ -n $(echo "${VERSION}" | grep "-") ]]; then
              BASEVER=$(echo "${VERSION}" | sed 's/\.-.*//')
              BETAVER=$(echo "${VERSION}" | sed 's/.*-//')
              VERSION="${BASEVER}.0-beta${BETAVER}"
          fi

          mv temp/linux-x86-64/naev-linux-x86-64 dist/naev-$VERSION-linux-x86-64
          mv temp/linux-x86-32/naev-linux-x86-32 dist/naev-$VERSION-linux-x86-32
          mv temp/macos/naev-macos.zip dist/naev-$VERSION-macos.zip
          mv temp/win64/naev-win64.exe dist/naev-$VERSION-win64.exe
          mv temp/win64/naev-win64.zip dist/naev-$VERSION-win64.zip
          mv temp/win32/naev-win32.exe dist/naev-$VERSION-win32.exe
          mv temp/win32/naev-win32.zip dist/naev-$VERSION-win32.zip
          mv temp/source/source.tar.bz2 dist/naev-$VERSION-source.tar.bz2
          mv temp/ndata/ndata.zip dist/ndata-$VERSION.zip

      - name: Upload Release Assets
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: release test 
          files: |
            ${{ github.workspace }}/dist/*
        #if: ${{ github.repository == 'naev/naev' }}
