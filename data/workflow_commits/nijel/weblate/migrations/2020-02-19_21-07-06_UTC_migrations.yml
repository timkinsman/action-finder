name: Migrations

on:
  push:
    paths:
      - 'weblate/**'
      - '*.py'
      - 'requirements*.txt'
      - 'ci/*'
      - '.github/workflows/migrations.yml'
  pull_request:
    paths:
      - 'weblate/**'
      - '*.py'
      - 'requirements*.txt'
      - 'ci/*'
      - '.github/workflows/migrations.yml'

jobs:
  migrations:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: ["postgres", "mariadb", "mysql", "sqlite"]
      fail-fast: false
    name: ${{ matrix.database }}

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: weblate
      mariadb:
        image: mariadb:10
        ports:
          - 3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: weblate
      mysql:
        image: mysql:8
        ports:
          - 3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: weblate

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-migrate-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install apt dependencies
      run: sudo ./ci/apt-install
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install pip dependencies
      run: |
        ./ci/pip-install
        pip install psycopg2-binary==2.7.7
    - name: Detect database
      id: database
      run: |
        if [ ${{ matrix.database }} = postgres ] ; then
            echo "::set-output name=port::${{ job.services.postgres.ports['5432'] }}"
        elif [ ${{ matrix.database }} = mariadb ] ; then
            echo "::set-output name=port::${{ job.services.mariadb.ports['3306'] }}"
        elif [ ${{ matrix.database }} = mysql ] ; then
            echo "::set-output name=port::${{ job.services.mysql.ports['3306'] }}"
        else
            echo "::set-output name=port::"
        fi
    - name: Migrate
      env:
        CI_DATABASE: ${{ matrix.database }}
        CI_DB_PASSWORD: "weblate"
        CI_DB_HOST: "127.0.0.1"
        CI_DB_PORT: ${{ steps.database.outputs.port }}
        CI_SELENIUM: "1"
        DJANGO_SETTINGS_MODULE: "weblate.settings_test"

      run: ./ci/run-migrate
    - name: Coverage
      run: |
        coverage combine
        coverage xml
    - uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        flags: migrations
        name: Migrations ${{ matrix.database }}
    - name: Dump docker logs on failure
      if: failure()
      uses: jwalton/gh-docker-logs@v1
