name: Package
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: |
        0 0 * * *
jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        package-id:
          - postgresql-12-pgroonga-debian-buster
          - postgresql-12-pgroonga-debian-buster-i386
          - postgresql-11-pgroonga-debian-buster
          - postgresql-11-pgroonga-debian-buster-i386
          - postgresql-11-pgroonga-debian-stretch
          - postgresql-11-pgroonga-debian-stretch-i386
          - postgresql-10-pgroonga-debian-stretch
          - postgresql-10-pgroonga-debian-stretch-i386
          - postgresql-9.6-pgroonga-debian-stretch
          - postgresql-9.6-pgroonga-debian-stretch-i386
          - postgresql12-pgroonga-centos-8
          - postgresql12-pgroonga-centos-7
          - postgresql12-pgroonga-centos-6
          - postgresql11-pgroonga-centos-7
          - postgresql11-pgroonga-centos-6
          - postgresql10-pgroonga-centos-7
          - postgresql10-pgroonga-centos-6
          - postgresql96-pgroonga-centos-7
          - postgresql96-pgroonga-centos-6
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt -y -V install \
            rake
          sudo gem install bundler
          bundle install
      - name: Clone dependencies
        run: |
          cd ..
          git clone --depth 1 https://github.com/apache/arrow.git
      - name: Build archive
        run: |
          rake dist
      - name: Build with Docker
        run: |
          set -x
          package=$(echo ${{ matrix.package-id }} | \
                      sed -E -e 's/-(debian|centos).*$//g')
          os=$(echo ${{ matrix.package-id }} | \
                 sed -E -e 's/^.*-((debian|centos).*)$/\1/g')
          cd packages/${package}
          rake version:update
          case ${os} in
            debian-*)
              rake apt:build APT_TARGETS=${os}
              mv apt/repositories/ ../../
              ;;
            centos-*)
              rake yum:build YUM_TARGETS=${os}
              mv yum/repositories/ ../../
              ;;
          esac
        env:
          APACHE_ARROW_REPOSITORY: ../../../arrow
      - uses: actions/upload-artifact@master
        with:
          name: packages-${{ matrix.package-id }}
          path: repositories/
  webhook:
    name: Webhook
    runs-on: ubuntu-latest
    if: always()
    needs:
      - build
    steps:
      - name: Send Webhook
        run: |
          { \
            echo "{"; \
            echo -n "  \"github\": ${GITHUB_CONTEXT},"; \
            echo -n "  \"job\": ${JOB_CONTEXT},"; \
            echo -n "  \"env\": ${ENV_CONTEXT},"; \
            echo -n "  \"steps\": ${STEPS_CONTEXT},"; \
            echo -n "  \"runner\": ${RUNNER_CONTEXT},"; \
            echo -n "  \"strategy\": ${STRATEGY_CONTEXT}"; \
            echo '}'; \
          } | tee data.json
          curl \
            --request POST \
            --header "Content-Type: application/json" \
            --data @data.json \
            https://webhook.commit-email.info/
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          ENV_CONTEXT: ${{ toJson(env) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
