name: Build

on:
  # Build on new commits or pull requests.
  push:
  pull_request:
  schedule:
    # Run every week just to make sure the CI environment still works. 
    - cron: '0 0 * * 0'

jobs:
  build-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install Apt Dependencies
      run: sudo apt update && sudo apt install ninja-build qtbase5-dev libboost-dev libboost-date-time-dev libboost-filesystem-dev libboost-iostreams-dev rapidjson-dev libasound2-dev librtmidi-dev libminizip-dev doctest-dev
    - name: Install Other Dependencies
      run: vcpkg install pugixml
    - name: Create Build Directory
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Generate Project
      working-directory: ${{runner.workspace}}/build
      # We could use the -S and -B options, but we only have CMake 3.12 here.
      run: cmake ${GITHUB_WORKSPACE} -G Ninja -DCMAKE_TOOLCHAIN_FILE="${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake"
    - name: Build
      run: ninja -C ${{runner.workspace}}/build
    - name: Test
      run: ${{runner.workspace}}/build/bin/pte_tests

  build-osx:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      # CMake 3.17 is already installed
      run: brew update && brew install boost doctest minizip ninja pugixml qt5 pugixml rapidjson rtmidi
    - name: Generate Project
      run: cmake -S ${GITHUB_WORKSPACE} -B ${{runner.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5/lib/cmake
    - name: Build
      run: cmake --build ${{runner.workspace}}/build
    - name: Test
      run: ${{runner.workspace}}/build/bin/pte_tests
    - name: Build Installer
      run: cmake --build ${{runner.workspace}}/build --target package
    - name: Upload Installer
      uses: actions/upload-artifact@v2
      with:
        name: "powertabeditor-osx.dmg"
        path: ${{runner.workspace}}/build/powertabeditor-osx.dmg

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: vcpkg install --triplet x64-windows boost-algorithm boost-date-time boost-endian boost-filesystem boost-functional boost-iostreams boost-range boost-rational boost-signals2 boost-stacktrace doctest minizip pugixml rapidjson
    # Building Qt via vcpkg would take a while ...
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Generate Project
      run: cmake -A x64 -B ./build -DCMAKE_TOOLCHAIN_FILE="${env:VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake"
    - name: Build
      run: cmake --build ./build --config Release
    - name: Test
      run: ./build/bin/pte_tests.exe

    - uses: microsoft/setup-msbuild@v1.0.0

    - name: Cache VC redist
      id: cache-redist
      uses: actions/cache@v2
      with:
        path: installer/windows/redist/vc_redist.x64.exe
        key: ${{ runner.os }}-redist-v1

    - name: Fetch VC redist
      if: steps.cache-redist.outputs.cache-hit != 'true'
      run: |
        cd installer/windows
        mkdir redist
        Invoke-WebRequest https://aka.ms/vs/16/release/vc_redist.x64.exe -OutFile redist/vc_redist.x64.exe

    # The qwindowsvistastyle plugin also needs to be installed, but isn't installed to the bin dir
    # when building with the Qt package from install-qt-action ...
    - name: Build Installer
      run: |
        mkdir ./build/bin/styles
        cp "${env:QT_PLUGIN_PATH}/styles/qwindowsvistastyle.dll" ./build/bin/styles
        cd installer/windows
        msbuild pte_windows_build.sln -p:Configuration=Release

    - name: Upload Installer
      uses: actions/upload-artifact@v2
      with:
        name: "powertabeditor-windows.exe"
        path: installer/windows/bin/x64/Release/powertabeditor.exe
