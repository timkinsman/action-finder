name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  beefore:
    name: Pre-test checks
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        task: ['pycodestyle']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install beefore
    - name: Run Beefore checks
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ -z "${{ github.event.number }}" ]; then
          beefore ${{ matrix.task }} .
        else
          beefore --username github-actions --repository ${{ github.repository }} --pull-request ${{ github.event.number }} --commit ${{ github.event.pull_request.head.sha }} ${{ matrix.task }} .
        fi

  smoke:
    name: Smoke test (3.5)
    needs: beefore
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install .
    - name: Build test library
      run: |
        make
    - name: Test
      run: |
        python setup.py test

  python-versions:
    name: Python compatibility test
    needs: smoke
    runs-on: macOS-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install .
    - name: Build test library
      run: |
        make
    - name: Test
      run: |
        python setup.py test

  package:
    name: Packaging checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel twine
    - name: Build and check release artefacts
      run: |
        python setup.py sdist bdist_wheel
        python -m twine check dist/*
