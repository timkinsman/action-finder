# This file based on https://gist.github.com/mwouts/9842452d020c08faf9e84a3bba38a66f
# See: https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners
# 2020-06-22 - slg - customized
# 2020-06-27 - slg - expanded to G++ for MacOS
# 
name: CI (pytest and c++)
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-18.04', 'ubuntu-20.04', 'macos-10.15']
        python-version: [3.7, 3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -r requirements.txt ]; then pip install -r requirements.txt ; fi
          if [ -r requirements-dev.txt ]; then pip install -r requirements-dev.txt ; fi

      #    # Install program analysis tools
      #    pip install black flake8 autopep8 || true
      #    pip install autopep8 || true
      #- name: Lint with flake8
      #  run: |
      #     stop the build if there are Python syntax errors or undefined names
      #     flake8 python --count --select=E9,F63,F7,F82 --show-source --statistics

      #     all Python files should follow PEP8 (except some notebooks, see setup.cfg)
      #     flake8 python

      #     exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
      #    flake8 python --count --exit-zero --max-complexity=10 --statistics

      #- name: Install from source (required for the pre-commit tests)
      #  run: pip install .

      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml python

      - name: schema test
        run: |
          make schema-init
          cd python/tests/test_venv
          echo disabled until https://github.com/simsong/dfxml/issues/39 is resolved.

      - name: c/c++ test
        run: |
          printenv
          cd src
          ./bootstrap.sh && ./configure && make && make check          

      #- name: Upload coverage
      #  uses: codecov/codecov-action@v1
