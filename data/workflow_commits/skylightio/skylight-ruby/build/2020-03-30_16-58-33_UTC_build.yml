name: Skylight Agent

on:
  pull_request: {}
  push:
    branches:
      - master

env:
  BUNDLE_PATH: ${{ github.workspace }}/vendor/bundle
  SKYLIGHT_EXT_STRICT: "false"
  SKYLIGHT_REQUIRED: "true"
  SKYLIGHT_ENABLE_TRACE_LOGS: "true"
  SKYLIGHT_TEST_DIR: "/tmp"
  RAILS_ENV: "development"
  EMBEDDED_HTTP_SERVER_TIMEOUT: "30"
  WORKER_SPAWN_TIMEOUT: "15"
  COVERAGE: "true"
  COVERAGE_DIR: ${{ github.workspace }}/coverage
  DISABLED_COVERAGE_DIR: ${{ github.workspace }}/coverage-disabled

jobs:
  tests-with-services:
    strategy:
      matrix:
        include:
          - ruby-version: 2.7
            services:
              mongo:
                image: mongo:4.0
                ports:
                  - 27017:27017
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              TEST_MONGO_INTEGRATION: "true"
              MONGO_HOST: localhost

          - ruby-version: 2.7
            services:
              mongo:
                image: mongo:4.0
                ports:
                  - 27017:27017
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              TEST_MONGO_INTEGRATION: "true"
              MONGO_HOST: localhost
              MONGOID_VERSION: "~> 6.0"

          - ruby-version: 2.7
            env:
              HELLO: world
            services:
              elasticsearch:
                image: elasticsearch:6.8.6
                ports:
                  - 9200:9200
                  - 9300:9300
                options: -e "discovery.type=single-node"

    runs-on: ubuntu-latest
    services: ${{ matrix.services }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
      - name: Install dependencies (apt)
        run: sudo apt-get install sqlite3 libsqlite3-dev
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.env.BUNDLE_GEMFILE }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
      - name: Install dependencies (bundler)
        env: ${{ matrix.env }}
        continue-on-error: ${{ matrix.allow_failure }}
        run: |
          gem install bundler
          bundle
      - name: Run tests
        env: ${{ matrix.env }}
        continue-on-error: ${{ matrix.allow_failure }}
        run: |
          bundle exec rake
      - name: Run tests (disabled agent)
        env: ${{ matrix.env }}
        continue-on-error: ${{ matrix.allow_failure }}
        run: |
          COVERAGE_DIR=$DISABLED_COVERAGE_DIR SKYLIGHT_DISABLE_AGENT=true bundle exec rake
      - name: Prepare coverage files for upload
        run: |
          mkdir -p coverage-sync/${{ github.run_id }}
          cp coverage/.resultset.json coverage-sync/${{ github.run_id}}/coverage.$(uuidgen).json
          cp coverage-disabled/.resultset.json coverage-sync/${{ github.run_id }}/coverage.disabled.$(uuidgen).json
        if: success()
      - name: Upload coverage files
        uses: jakejarvis/s3-sync-action@v0.5.1
        if: success()
        env:
          AWS_S3_BUCKET: 'direwolf-agent-github'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'coverage-sync'

  tests:
    strategy:
      matrix:
        include:
          - ruby-version: 2.4
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              SIDEKIQ_VERSION: "~> 4"
              GRAPHQL_VERSION: "~> 1.7.0"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              GRAPHQL_VERSION: "~> 1.9.0"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              GRAPHQL_VERSION: "~> 1.8.0"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              TILT_VERSION: 1.4.1

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-6.0.x

          - ruby-version: 2.7
            allow_failure: true
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-edge

          - ruby-version: 2.4
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.sinatra-1.4.x

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.sinatra-1.4.x

          - ruby-version: 2.4
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.sinatra-2.0.x

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.sinatra-2.0.x

          - ruby-version: 2.7
            allow_failure: true
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.sinatra-edge

          - ruby-version: 2.4
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape
              RACK_VERSION: "~> 2.0.8"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape
              GRAPE_VERSION: "~> 0.13.0"
              RACK_VERSION: "~> 2.0.8"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape
              GRAPE_VERSION: "~> 1.1.0"
              RACK_VERSION: "~> 2.0.8"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape
              GRAPE_VERSION: "~> 1.2.0"
              RACK_VERSION: "~> 2.0.8"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape
              GRAPE_VERSION: "~> 1.3.0"

          - ruby-version: 2.7
            allow_failure: true
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.grape
              GRAPE_VERSION: edge

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              TILT_VERSION: 1.4.1

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.sinatra-1.4.x
              SEQUEL_VERSION: 4.34.0

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              AMS_VERSION: "~> 0.8.3"
              SIDEKIQ_VERSION: "none"

          - ruby-version: 2.7
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              AMS_VERSION: "~> 0.9.5"

          - ruby-version: 2.7
            allow_failure: true
            env:
              BUNDLE_GEMFILE: gemfiles/Gemfile.rails-5.2.x
              AMS_VERSION: edge

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
      - name: Install dependencies (apt)
        run: sudo apt-get install sqlite3 libsqlite3-dev
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.env.BUNDLE_GEMFILE }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
      - name: Install dependencies (bundler)
        env: ${{ matrix.env }}
        continue-on-error: ${{ matrix.allow_failure }}
        run: |
          gem install bundler
          bundle
      - name: Run tests
        env: ${{ matrix.env }}
        continue-on-error: ${{ matrix.allow_failure }}
        run: |
          bundle exec rake
      - name: Run tests (disabled agent)
        env: ${{ matrix.env }}
        continue-on-error: ${{ matrix.allow_failure }}
        run: |
          COVERAGE_DIR=$DISABLED_COVERAGE_DIR SKYLIGHT_DISABLE_AGENT=true bundle exec rake
      - name: Prepare coverage files for upload
        run: |
          mkdir -p coverage-sync/${{ github.run_id }}
          cp coverage/.resultset.json coverage-sync/${{ github.run_id}}/coverage.$(uuidgen).json
          cp coverage-disabled/.resultset.json coverage-sync/${{ github.run_id }}/coverage.disabled.$(uuidgen).json
        if: success()
      - name: Upload coverage files
        uses: jakejarvis/s3-sync-action@v0.5.1
        if: success()
        env:
          AWS_S3_BUCKET: 'direwolf-agent-github'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'coverage-sync'

  ruby-head:
    container:
      image: rubocophq/ruby-snapshot:latest
      env:
        BUNDLE_GEMFILE: gemfiles/Gemfile.rails-edge
        RUBY_VERSION: "2.8.0-dev"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/vendor/bundle
          key: ${{ runner.os }}-gems-${{ job.container.env.RUBY_VERSION }}-${{ job.container.env.BUNDLE_GEMFILE }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ job.container.env.RUBY_VERSION }}-
      - name: Install dependencies (bundler)
        run: |
          gem install bundler
          bundle
      - name: Run tests
        run: |
          bundle exec rake
      - name: Run tests (disabled agent)
        run: |
          SKYLIGHT_DISABLE_AGENT=true bundle exec rake

  upload_coverage:
    runs-on: ubuntu-latest
    needs: [tests, tests-with-services]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up commit metadata
        if: github.event_name == 'push'
        env:
          GIT_COMMIT_SHA: ${{ github.sha }}
          GIT_BRANCH: ${{ github.ref }}
        run: |
          echo "::set-env name=GIT_COMMIT_SHA::${GIT_COMMIT_SHA}"
          echo "::set-env name=GIT_BRANCH::${GIT_BRANCH/refs\/heads\//}"
      - name: Set up commit metadata
        if: github.event_name == 'pull_request'
        env:
          GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          GIT_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          echo "::set-env name=GIT_COMMIT_SHA::${GIT_COMMIT_SHA}"
          echo "::set-env name=GIT_BRANCH::${GIT_BRANCH}"
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - name: Install Codeclimate test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
      - name: Download coverage data
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          mkdir -p coverage
          mkdir -p formatted_coverage
          aws s3 sync s3://direwolf-agent-github/${{ github.run_id }} coverage
      - name: Prepare and upload coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          find coverage -name '*.json' | xargs -I % ./cc-test-reporter format-coverage -t simplecov -o formatted_coverage/% %
          ./cc-test-reporter sum-coverage formatted_coverage/**/*.json
          ./cc-test-reporter upload-coverage
