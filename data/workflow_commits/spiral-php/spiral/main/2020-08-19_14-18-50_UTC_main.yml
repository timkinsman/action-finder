
name: build

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  #
  # Execute coding standards checks on the
  # latest stable PHP version.
  #
  coding-standards:
    name: Coding Standard
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['7.4']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: Validate Composer
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer update --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Check coding standards
        run: |
          vendor/bin/spiral-cs check src/Framework
          vendor/bin/spiral-cs check src/Auth/src
          vendor/bin/spiral-cs check src/Boot/src
          vendor/bin/spiral-cs check src/Config/src
          vendor/bin/spiral-cs check src/Console/src
          vendor/bin/spiral-cs check src/Core/src
          vendor/bin/spiral-cs check src/Debug/src
          vendor/bin/spiral-cs check src/Dumper/src
          vendor/bin/spiral-cs check src/Encrypter/src
          vendor/bin/spiral-cs check src/Exceptions/src
          vendor/bin/spiral-cs check src/Files/src
          vendor/bin/spiral-cs check src/Logger/src
          vendor/bin/spiral-cs check src/Models/sr


  #
  # Execute unit tests on all valid PHP versions.
  #
  test:
    name: Tests (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.2', '7.3', '7.4']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          tools: pecl
          ini-values: "memory_limit=-1"

      - name: Setup Protobuf
        run: |
          PROTOC_VERSION=3.11.3
          PROTOC_FILENAME=protoc-${PROTOC_VERSION}-linux-x86_64.zip
          curl -sSL "https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_FILENAME}" -o ${PROTOC_FILENAME}
          unzip ${PROTOC_FILENAME}
          sudo mv bin/protoc /usr/bin
          protoc --version

      - name: Setup gRPC
        run: |
          GRPC_VERSION=1.2.0
          PHP_GRPC_DIR=protoc-gen-php-grpc-${GRPC_VERSION}-linux-amd64
          curl -sSL "https://github.com/spiral/php-grpc/releases/download/v${GRPC_VERSION}/${PHP_GRPC_DIR}.tar.gz" -o ${PHP_GRPC_DIR}.tar.gz
          tar -xf ${PHP_GRPC_DIR}.tar.gz ${PHP_GRPC_DIR}/protoc-gen-php-grpc
          sudo mv ${PHP_GRPC_DIR}/protoc-gen-php-grpc /usr/bin/protoc-gen-php-grpc

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Execute Tests
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --testdox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
