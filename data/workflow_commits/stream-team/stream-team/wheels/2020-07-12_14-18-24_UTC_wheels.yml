name: Wheels
on:
  release:
    types:
      - published
  push:
    branches:
      - wheeltest

env:
  CIBW_BUILD: "cp3?-*"
  CIBW_SKIP: "*-win32 *-manylinux_i686"
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

jobs:
  build_wheels:
    name: Build ${{ matrix.python-version }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        python-version: ["3.7", "3.8"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          conda create -n gala-wheels python=${{ matrix.python-version }} -q -c conda-forge
          conda activate gala-wheels
          conda install -c conda-forge -q gsl libpython
          python -m pip install cibuildwheel==1.5.1

      - name: Install Visual C++ for Python 3.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython37 -f -y

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          conda create -n gala-wheels python=${{ matrix.python-version }} -q -c conda-forge
          conda activate gala-wheels
          conda install -c conda-forge -q gsl libpython
          python -m pip install cibuildwheel==1.5.1

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/