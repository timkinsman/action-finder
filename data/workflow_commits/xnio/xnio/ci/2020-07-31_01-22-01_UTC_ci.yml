# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: XNIO CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build-all:
    name: Compile (no tests) with JDK 8
    runs-on: ubuntu-latest
    steps:
    - uses: n1hility/cancel-previous-runs@v2
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            m2-
    - uses: actions/checkout@v2
    - name: Host information
      run: netstat -anp
      shell: bash
    - name: Set up JDK 8
      uses: joschi/setup-jdk@v2
      with:
        java-version: 8
    - name: Build
      run: mvn -U -B -fae -DskipTests -Dfindbugs clean install
    - name: Tar Maven Repo
      shell: bash
      run: tar -czf maven-repo.tgz -C ~ .m2/repository
    - name: Persist Maven Repo
      uses: actions/upload-artifact@v1
      with:
        name: maven-repo
        path: maven-repo.tgz
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: surefire-reports-build
        path: '**/surefire-reports/*.txt'
  test-matrix:
    name: ${{ matrix.module }}-${{ matrix.openjdk_impl}}-${{ matrix.jdk }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build-all
    strategy:
      fail-fast: false
      matrix:
        module: [api, nio-impl]
        os: [ubuntu-20.04, windows-latest]
        jdk: [8, 11]
        openjdk_impl: [openjdk, openj9]
        exclude:
          - os: ubuntu-20.04
            jdk: 11
          - os: windows-latest
            jdk: 11
    steps:
    - name: Configure runner - Linux 
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo bash -c "echo '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4' > /etc/hosts"
        sudo bash -c "echo '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6' >> /etc/hosts"
        sudo apt-get update
        sudo apt-get install openssl net-tools -y
    - name: Configure Runner - Windows
      if: contains(matrix.os, 'windows')
      run: |
        echo '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4' >	%SystemRoot%\System32\drivers\etc\hosts
        echo '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6' >> %SystemRoot%\System32\drivers\etc\hosts
        choco install openssl --version=1.1.1.4 -y
      shell: cmd
    - name: Run netstat (pre)
      if: always()
      run: netstat -anp
      shell: bash
    - uses: n1hility/cancel-previous-runs@v2
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v2
    - name: Download Maven Repo
      uses: actions/download-artifact@v1
      with:
        name: maven-repo
        path: .
    - name: Extract Maven Repo
      shell: bash
      run: tar -xzf maven-repo.tgz -C ~
    - name: Set up JDK ${{ matrix.java }}
      uses: joschi/setup-jdk@v2
      with:
        java-version: ${{ matrix.jdk }}
        openjdk_impl: ${{ matrix.jdk_impl }}
    - name: Run Tests
      run: mvn -U -B -fae test -pl ${{ matrix.module }}
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: surefire-reports-${{ matrix.module }}-${{ matrix.openjdk_impl}}-${{ matrix.jdk }}-${{ matrix.os }}
        path: '**/surefire-reports/*.txt'
    - name: Run netstat (post)
      if: always()
      run: netstat -anp