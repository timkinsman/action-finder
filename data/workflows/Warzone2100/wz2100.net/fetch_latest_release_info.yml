name: Fetch Latest GitHub Release Info
on:
  repository_dispatch:

jobs:
  # Wait for up to 10 minutes for previous workflow run to complete, abort if not done by then
  pre-ci:
    runs-on: ubuntu-latest
    if: github.event.action == 'github_release_update'
    timeout-minutes: 10
    steps:
      - name: 'Block Concurrent Executions'
        uses: past-due/turnstyle@v1
        with:
          poll-interval-seconds: 30
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: pre-ci
    name: 'Fetch Latest GitHub Release Info'
    runs-on: ubuntu-latest
    if: github.event.action == 'github_release_update'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          persist-credentials: false
      - name: Download latest GitHub Release info
        uses: past-due/fetch-release-info@master
        with:
          github_repo: 'Warzone2100/warzone2100'
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          calculate_asset_info: true
          output_directory: 'data/github_releases_info'
          cache_directory: '_tmp_cache_data/github_releases_info'
      - name: Commit any changes to data files
        env:
          PUSH_PAT: ${{ secrets.WZ2100_PUSH_SECRET_TOKEN }} # use a PAT so that subsequent workflows are triggered on push
        run: |
          git config user.name "wzdev-ci"
          git config user.email "61424532+wzdev-ci@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Automated update of GitHub Releases data: ${timestamp}" || exit 0
          git pull --rebase
          git push "https://${PUSH_PAT}@github.com/Warzone2100/wz2100.net.git" master:master
